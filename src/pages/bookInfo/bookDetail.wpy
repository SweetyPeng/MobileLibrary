<template>
  <view class="book-detail">
    <!-- 查看书籍状态底部弹窗 -->
    <ModalFixedBtm 
      title="该书籍状态">
      <view>
        <view style="padding:32rpx;">
          <view>持书人:</view>
          <view style="color:#4A90E2;text-decoration:underline;margin-top:16rpx;">彭甜甜</view>
        </view>
        <view style="padding:0 32rpx;margin-top:64rpx;">
          <button type="primary" size="mini" bindtap="publish">我要发布</button>
          <button type="primary" size="mini" bindtap="borrow">我要借阅</button>
        </view>
      </view>
    </ModalFixedBtm>
    <!-- 是否确定发布模态框 -->
    <bsDialog>
      <view slot="bsDialog_content" class="content-tip">
        <view>请您确定是否要发布漂流?</view>
        <view>《{{bookInfo.title}}》</view>
      </view>
    </bsDialog>
    <!-- 图书详情 -->
    <scroll-view class="wrapper-scroll" scroll-y="true" scroll-top="100">
      <view class="detail-img">
        <view class="detail-img-bg" style=" background-image: url({{bookInfo.images.large}})"></view>
        <image src="{{bookInfo.images.large}}" class="detail-img-s"/>
      </view>
      <view class="detail-info">
        <view class="detail-fl">
          <view class="detail-title">{{bookInfo.title}}</view>
          <view class="detail-text detail-author">作者：{{bookInfo.author || '暂无'}}</view>
          <view class="detail-text detail-publisher">出版社：{{bookInfo.publisher || '暂无'}}</view>
          <view class="detail-text detail-pubdate">出版时间：{{bookInfo.pubdate || '暂无'}}</view>
        </view>
        <view class="detail-summary">
          <text class="ibox-title-small">图书简介：</text>
          <view class="ibox-content">
            <view>{{bookInfo.summary || '找不到简介呢'}}</view>
          </view>
        </view>
      </view>
    </scroll-view>
    <!-- 底部按钮 -->
    <view class="btn-group {{isIpx?'mb68':''}}">
      <view class="status-btn" bindtap="checkBookStatus">查看书籍状态</view>
    </view>
    <!-- 借阅表单 -->
    <view class="form {{visible?'show':''}}" >
      <view class="mask" bindtap="hiddenForm"></view>
      <form bindsubmit="submit">
        <view class="form-content">
        <view class="input-item">
          <text>微信号</text>
          <input type="text" maxlength="25" placeholder='请输入微信号' name="wxNum" confirm-type="next"/>
        </view>
        <view class="input-item">
          <text>电   话</text>
          <input type='number' maxlength="11"  placeholder='请输入手机号码' name="phoneNum" confirm-type="next"/>
        </view>
        <view class="input-item">
          <text>留   言</text>
          <input type="text" placeholder="给书主的留言" maxlength='50' name="msg" confirm-type="done"/>
        </view>
        <view wx:if="{{infoVisible}}" class="info">请填写微信号和手机号</view>
        <view class="input-item">
          <button form-type="submit" class="send"> 发 送 </button>
        </view>
      </view>
      </form>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import wx from 'utils/wx';
import RequestMixin from 'mixins/request';
import ModalFixedBtm from 'components/modalFixedBtm';
import bsDialog from 'components/bs_dialog';

export default class BookDetail extends wepy.page {
  config = {
    navigationBarTitleText: '图书详情'
  };
  components = {
    ModalFixedBtm,
    bsDialog
  };
  data = {
    bookInfo: {},
    isIpx: false,
    ownerName: '',
    visible: false, // 表单弹框
    hidden: true, // 隐藏借阅按钮
    infoVisible: false // 输入提示信息
  };
  mixins = [RequestMixin];
  methods = {
    async publish() {
      let resp = await this.$invoke('bsDialog', 'showBsDialog', {
        title: '是否发布漂流',
        buttons: [
          {
            type: 'confirm',
            text: '确定',
            color: '#0076FF'
          },
          {
            type: 'cancle',
            text: '取消',
            color: '#0076FF'
          }
        ]
      });
      let { type } = resp;
      if (type === 'confirm') {
        let book = this.bookInfo;
        this.postBooks(book);
        this.$invoke('ModalFixedBtm', 'close');
      }
    },
    borrow() {
      this.visible = true;
    },
    hiddenForm() {
      this.visible = false;
    },
    checkBookStatus() {
      this.$invoke('ModalFixedBtm', 'open');
    },
    submit(e) {
      console.log(e.detail);
      let wxNum = e.detail.value.wxNum;
      let phoneNum = e.detail.value.phoneNum;
      let msg = e.detail.value.msg;
      let bookData = this.bookInfo;
      console.log(msg);
      console.log(bookData);
      if (!wxNum || !phoneNum || phoneNum.length !== 11) {
        this.infoVisible = true
        return;
      }
      this.visible = false;
      this.$loading('发送中');
      // TODO: 借阅信息发送
      this.$invoke('ModalFixedBtm', 'close');
    }
  };

  // 发布图书--业务流程--图书数据库--bookList
  postBooks(book) {
    this.ownerName = this.$parent.globalData.userInfo.nickName;
    book.ownerName = this.ownerName;
    wx.cloud.callFunction({
      name: 'postBook',
      data: {
        bookID: book.isbn,
        bookName: book.title,
        bookAuthor: book.author,
        bookPublisher: book.publisher,
        bookPubdate: book.pubdate,
        bookSummary: book.summary,
        bookImages: book.images,
        owner: {
          ownerName: book.ownerName
        }
      }
    }).then(res => {
      console.log('postbook=====>', res)
      if (res.errMsg === 'cloud.callFunction:ok') {
        this.$toast('发布成功!');
      } else {
        this.$toast('发布失败,请重试!');
      }
    })
  }
  /**
   * 查询图书详情信息 --通过云函数
   * @param {Object}
   * param 为id：通过id查询，为isbn：通过isbn查询
   */
  async queryBookById(param) {
    const resp = await wx.cloud
      .callFunction({
        // 传递给云函数的参数
        name: 'bookInfo',
        data: param
      })
      .then(res => {
        return JSON.parse(res.result);
      })
      .catch(err => {
        console.log(err);
      });
    // const db = wx.cloud.database({});
    // const book = db.collections('books');
    // db.collection('books').add({
    //   // data字段表示需新增的JSON数据
    //   data: resp
    // }).then(res => {
    //   console.log(res)
    // }).catch(err => {
    //   console.log(err)
    // });
    if (resp) {
      // resp.rating = Object.assign(resp.rating, {
      //   block: getStar(resp.rating.average)
      // });
      // if (resp.summary.length > 100) {
      //   resp.summary = resp.summary.substr(0, 100) + '...';
      // }
      console.log('resp=====>', resp);
    }
    this.bookInfo = resp;
    this.$apply();
  }

  onLoad(options) {
    // let isbn = options.isbn;
    // let owner = this.globalData.userInfo.nickname;
    // let ownerImg = this.globalData.userInfo.avatarUrl;
    if (options.id) {
      const param = {
        id: options.id
      };
      this.queryBookById(param);
    }
    if (options.isbn) {
      const param = {
        isbn: options.isbn
      };
      this.queryBookById(param);
    }
    this.isIphoneX();
  }
  // 判断是否是iphoneX
  async isIphoneX() {
    const systemInfo = await wepy.getSystemInfo();
    const isIpx = systemInfo.model;
    this.isIpx = isIpx.indexOf('iPhone X') > -1;
    this.$apply();
  }
}
</script>
<style lang="less">

.book-detail {
  .bs-dialog__header {
  font-size: 34rpx;
}
.content-tip {
  font-size: 28rpx;
  color: rgba(93,93,93,1);
  line-height: 40rpx;
  text-align: center;
}
  .wrapper-scroll {
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    overflow: auto;
  }
  .detail-img {
    position: relative;
    width: 100%;
    height: 600rpx;
    display: flex;
    justify-content: center;
    align-content: center;
    overflow: hidden;
    .detail-img-bg {
      position: absolute;
      z-index: -2;
      left: 0;
      top: 0;
      width: 100%;
      height: 600rpx;
      background-size: cover;
      background-position: center;
      filter: blur(30rpx);
      transform: scale(1.2);
    }
    .detail-img-s {
      z-index: 9999;
      width: 354rpx;
      height: 504rpx;
      margin-top: 47rpx;
      box-shadow: 0 0rpx 30rpx rgba(0, 0, 0, 0.3);
    }
  }
  .detail-info {
    background: #fff;
    padding: 30rpx;
    font-size: 28rpx;
    color: #656565;
    .detail-fl {
      .detail-title {
        font-size: 50rpx;
        color: #2d2d2d;
        font-weight: bold;
        margin-bottom: 20rpx;
      }
      .detail-text {
        margin-bottom: 14rpx;
      }
    }
  }
  .detail-summary {
    background: #fff;
    .ibox-title-small {
      display: block;
      padding-bottom: 10rpx;
      text-overflow: ellipsis;
    }
    .ibox-content {
      padding-bottom: 100rpx;
      line-height: 60rpx;
    }
    .ibox-content view {
      margin-bottom: 20rpx;
    }
  }
  .btn-group {
    width: 100%;
    height: 100rpx;
    position: fixed;
    bottom: 0;
    left: 0;
    .status-btn {
      width: 100%;
      height: 100%;
      font-size: 36rpx;
      display: inline-block;
      border-radius: 0;
      padding: 0;
      border: 0;
      color: #fff;
      background-color: #2bd3d2;
      line-height: 100rpx;
      text-align: center;
    }
  }
  .mb68 {
    bottom: 68rpx !important;
    &::after {
      content: ' ';
      position: fixed;
      height: 68rpx;
      bottom: 0;
      left: 0;
      right: 0;
      background: #fff;
    }
  }
  // 弹窗样式
  .form .mask{
    position: absolute;
    background-color: rgba(0,0,0,0.5);
    width: 100%;
    height: 100%;
    visibility: hidden;
    opacity: 0;
    z-index: -100;
    transition: height .2s ease-in-out;
  }
  .form .form-content{
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 0;
    background-color: #fff;
    transition: all .2s ease-in-out;
    overflow: hidden;
    z-index: 100;
    color: #666;
    font-size: 40rpx;
  }

  .form.show .mask{
    visibility: visible;
    opacity: 1;
    height: 60%;
    z-index : 100;
  }
  .form.show .form-content{
    height: 40%;
  }
  .form-content .input-item{
    display: flex;
    margin: 0 20rpx;
    border-top: 1px solid #ccc;
    height: 100rpx;
    align-items: center;
    justify-content: center;
  }
  .form-content .input-item:first-child{
    border-top: 0;
  }
  .input-item text{
    width: 20%;
    font-size: 30rpx;
  }
  .input-item text{
    width: 20%;
    font-size: 30rpx;
  }
  .input-item wx-input{
    display: inline-block;
    width: 100%;
    font-size: 30rpx;
  }
  .input-item:last-child{
    margin-top: 10rpx;
    border-top: 0;
  }
  .input-item .send{
    border: 1px solid rgb(62,58,57);
    height: 70rpx;
    line-height: 70rpx;
    background-color: #fff;
    color: rgb(87,86,84);
    font-size: 30rpx;
    text-align: center;
    width: 200rpx;
    border-radius: 5rpx;
  }
  .info {
    color: rgb(217,59,38);
    text-align: center;
    width: 100%;
    font-size: 25rpx;
  }
}
</style>
